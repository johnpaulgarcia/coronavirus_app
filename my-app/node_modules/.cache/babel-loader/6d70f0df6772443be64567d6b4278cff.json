{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Desktop/practice/my-app/src/components/manage/common/map.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport \"../../../App.css\";\nimport { Map, Marker, Popup, TileLayer, Circle, withLeaflet } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport ReactLeafletSearch from \"react-leaflet-search\";\nimport { GetData } from \"../../actions/Api\";\nimport { CircleLoading } from \"react-loadingg\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"viewpoint\":\n      {\n        return { ...state,\n          zoom: action.zoom,\n          area: action.area\n        };\n      }\n\n    case \"loaded\":\n      {\n        return { ...state,\n          cases: action.payloads\n        };\n      }\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nconst InitialState = {\n  zoom: 5,\n  area: [14.5995, 120.9842],\n  cases: []\n};\nexport default function WorldMap() {\n  const ReactLeafletSearchComponent = withLeaflet(ReactLeafletSearch);\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const {\n    zoom,\n    area,\n    cases\n  } = state;\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (isSubscribed) {\n      const Loaddata = async () => {\n        await GetData().then(res => {\n          dispatch({\n            type: \"loaded\",\n            name: \"general_info\",\n            payloads: res.data\n          });\n        }).catch(err => console.log(err));\n      };\n\n      Loaddata();\n    }\n\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, []);\n\n  const customPopup = SearchInfo => {\n    console.log(SearchInfo.info.split(\",\")[0]); // const result = cases.filter(element => {\n    //   if (element.admin2) {\n    //     return element.admin2\n    //       .toLowerCase()\n    //       .match(SearchInfo.info.split(\",\")[0].toLowerCase());\n    //   } else {\n    //     return element.combinedKey\n    //       .toLowerCase()\n    //       .match(SearchInfo.info.split(\",\")[0].toLowerCase());\n    //   }\n    // });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, cases.length > 0 ? /*#__PURE__*/React.createElement(Map, {\n    center: area,\n    zoom: zoom,\n    maxBounds: [[-90, -180], [90, 180]],\n    maxZoom: 10,\n    scrollWheelZoom: true // bounds={bounds}\n    ,\n    style: {\n      width: '100%',\n      height: '100vh'\n    },\n    minZoom: 5,\n    zoomControl: true,\n    Name: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    noWrap: true,\n    url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\",\n    attribution: \"Tiles \\xA9 Esri \\u2014 Source: Esri, DeLorme, NAVTEQ, USGS, Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom, 2012\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ReactLeafletSearchComponent, {\n    position: \"topleft\",\n    inputPlaceholder: \"Search Country.. e.g. Philippines\",\n    showCircle: true,\n    zoom: 6,\n    closeResultsOnClick: true,\n    popUp: customPopup // openSearchOnLoad={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), cases.map(element => //global data\n  element.confirmed > 0 ? /*#__PURE__*/React.createElement(Marker, {\n    key: element.combinedKey,\n    position: [element.lat, element.long],\n    onMouseOver: e => {\n      e.target.openPopup();\n    },\n    onMouseOut: e => {\n      e.target.closePopup();\n    },\n    onClick: () => {\n      dispatch({\n        type: \"viewpoint\",\n        zoom: 6,\n        area: [element.lat, element.long]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    position: [element.lat, element.long],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\",\n      fontWeight: 600,\n      fontSize: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, element.provinceState ? element.provinceState + \", \" + element.countryRegion : element.combinedKey), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\",\n      fontWeight: 600,\n      fontSize: \"16px\",\n      color: \"#0080FF\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"Confirmed: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 34\n    }\n  }, element.confirmed)), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\",\n      fontWeight: 600,\n      fontSize: \"16px\",\n      color: \"#00A572\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Recovered: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 34\n    }\n  }, element.recovered)), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\",\n      fontWeight: 600,\n      fontSize: \"16px\",\n      color: \"#D21F3C\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, \"Deaths: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 31\n    }\n  }, element.deaths))))) : \"\")) : /*#__PURE__*/React.createElement(CircleLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/home/webdev/Desktop/practice/my-app/src/components/manage/common/map.js"],"names":["React","useEffect","useReducer","Map","Marker","Popup","TileLayer","Circle","withLeaflet","Icon","ReactLeafletSearch","GetData","CircleLoading","reducer","state","action","type","zoom","area","cases","payloads","InitialState","WorldMap","ReactLeafletSearchComponent","dispatch","isSubscribed","Loaddata","then","res","name","data","catch","err","console","log","customPopup","SearchInfo","info","split","length","width","height","map","element","confirmed","combinedKey","lat","long","e","target","openPopup","closePopup","textAlign","fontWeight","fontSize","provinceState","countryRegion","color","recovered","deaths"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport \"../../../App.css\";\nimport {\n  Map,\n  Marker,\n  Popup,\n  TileLayer,\n  Circle,\n  withLeaflet\n} from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport ReactLeafletSearch from \"react-leaflet-search\";\nimport { GetData } from \"../../actions/Api\";\nimport { CircleLoading } from \"react-loadingg\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"viewpoint\": {\n      return {\n        ...state,\n        zoom: action.zoom,\n        area: action.area\n      };\n    }\n    case \"loaded\": {\n      return {\n        ...state,\n        cases: action.payloads\n      };\n    }\n    default:\n      break;\n  }\n  return state;\n}\n\nconst InitialState = {\n  zoom: 5,\n  area: [14.5995, 120.9842],\n  cases: []\n};\n\nexport default function WorldMap() {\n  const ReactLeafletSearchComponent = withLeaflet(ReactLeafletSearch);\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const { zoom, area, cases } = state;\n\n  useEffect(() => {\n    let isSubscribed = true;\n    if (isSubscribed) {\n      const Loaddata = async () => {\n        await GetData()\n          .then(res => {\n            dispatch({\n              type: \"loaded\",\n              name: \"general_info\",\n              payloads: res.data\n            });\n          })\n          .catch(err => console.log(err));\n      };\n      Loaddata();\n      \n    }\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, []);\n\n  const customPopup = SearchInfo => {\n    console.log(SearchInfo.info.split(\",\")[0]);\n    // const result = cases.filter(element => {\n    //   if (element.admin2) {\n    //     return element.admin2\n    //       .toLowerCase()\n    //       .match(SearchInfo.info.split(\",\")[0].toLowerCase());\n    //   } else {\n    //     return element.combinedKey\n    //       .toLowerCase()\n    //       .match(SearchInfo.info.split(\",\")[0].toLowerCase());\n    //   }\n    // });\n  };\n\n  return (\n    <React.Fragment>\n      {cases.length > 0 ? (\n        <Map\n          center={area}\n          zoom={zoom}\n          maxBounds={[\n            [-90, -180],\n            [90, 180]\n          ]}\n          maxZoom={10}\n          scrollWheelZoom={true}\n          // bounds={bounds}\n          style={{width:'100%',height:'100vh'}}\n          minZoom={5}\n          zoomControl={true}\n          Name=\"App\"\n        >\n          {/* <TileLayer\n            noWrap={true}\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>\n      contributors'\n          /> */}\n\n          <TileLayer\n            noWrap={true}\n            url='https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}'\n            attribution='Tiles &copy; Esri &mdash; Source: Esri, DeLorme, NAVTEQ, USGS, Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom, 2012'\n          />\n          \n          <ReactLeafletSearchComponent\n            position=\"topleft\"\n            inputPlaceholder=\"Search Country.. e.g. Philippines\"\n            showCircle={true}\n            zoom={6}\n            closeResultsOnClick={true}\n            popUp={customPopup}\n            // openSearchOnLoad={true}\n          />\n          {cases.map(element =>\n            //global data\n            element.confirmed > 0 ? (\n              <Marker\n                key={element.combinedKey}\n                position={[element.lat, element.long]}\n                onMouseOver={(e) => {\n                  e.target.openPopup();\n                }}\n                onMouseOut={(e) => {\n                  e.target.closePopup();\n                }}\n                onClick={() => {\n                  dispatch({\n                    type: \"viewpoint\",\n                    zoom: 6,\n                    area: [element.lat, element.long]\n                  });\n                }}\n              >\n                <Popup position={[element.lat, element.long]}>\n                  <div>\n                    <h2\n                      style={{\n                        textAlign: \"center\",\n                        fontWeight: 600,\n                        fontSize: \"16px\"\n                      }}\n                    >\n                      {element.provinceState\n                        ? element.provinceState + \", \" + element.countryRegion\n                        : element.combinedKey}\n                    </h2>\n                    <p\n                      style={{\n                        textAlign: \"center\",\n                        fontWeight: 600,\n                        fontSize: \"16px\",\n                        color: \"#0080FF\"\n                      }}\n                    >\n                      Confirmed: <span>{element.confirmed}</span>\n                    </p>\n                    <p\n                      style={{\n                        textAlign: \"center\",\n                        fontWeight: 600,\n                        fontSize: \"16px\",\n                        color: \"#00A572\"\n                      }}\n                    >\n                      Recovered: <span>{element.recovered}</span>\n                    </p>\n                    <p\n                      style={{\n                        textAlign: \"center\",\n                        fontWeight: 600,\n                        fontSize: \"16px\",\n                        color: \"#D21F3C\"\n                      }}\n                    >\n                      Deaths: <span>{element.deaths}</span>\n                    </p>\n                  </div>\n                </Popup>\n              </Marker>\n            ) : (\n              \"\"\n            )\n          )}\n        </Map>\n      ) : (\n        <CircleLoading />\n      )}\n    </React.Fragment>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}