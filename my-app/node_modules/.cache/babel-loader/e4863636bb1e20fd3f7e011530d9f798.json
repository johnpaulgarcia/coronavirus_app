{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Desktop/practice/my-app/src/components/manage/common/dailyupdate.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { DailyUpdate } from \"../../actions/Api\";\nimport { CircleLoading } from \"react-loadingg\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"load\":\n      {\n        return { ...state,\n          isloading: true\n        };\n      }\n\n    case \"loaded\":\n      {\n        return { ...state,\n          isloading: false,\n          rows: action.item\n        };\n      }\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nconst InitialState = {\n  isloading: false,\n  rows: [],\n  columns: [{\n    id: \"combinedKey\",\n    label: \"Name\",\n    minWidth: 170\n  }, {\n    id: \"countryRegion\",\n    label: \"ISO\\u00a0Code\",\n    minWidth: 100\n  }, {\n    id: \"provinceState\",\n    label: \"Province State\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toLocaleString()\n  }, {\n    id: \"confirmed\",\n    label: \"Confirmed Case\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toFixed(2)\n  }, {\n    id: \"recovered\",\n    label: \"Recovered Case\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toFixed(2)\n  }, {\n    id: \"deaths\",\n    label: \"Deaths Case\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toFixed(2)\n  }]\n};\nexport default function TableData(props) {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const {\n    rows,\n    columns,\n    isloading\n  } = state;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (isSubscribed) {\n      dispatch({\n        type: \"load\"\n      });\n\n      const Loaddata = async () => {\n        await DailyUpdate().then(res => {\n          console.log(res.data);\n          dispatch({\n            type: \"loaded\",\n            name: \"general_info\",\n            item: res.data\n          });\n        }).catch(err => console.log(err));\n      };\n\n      Loaddata();\n    }\n\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, isloading ? /*#__PURE__*/React.createElement(CircleLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth,\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 23\n      }\n    }, columns.map((column, indx) => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: indx,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }, value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100, 200],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/home/webdev/Desktop/practice/my-app/src/components/manage/common/dailyupdate.js"],"names":["React","useEffect","useReducer","DailyUpdate","CircleLoading","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useStyles","root","width","container","maxHeight","reducer","state","action","type","isloading","rows","item","InitialState","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","TableData","props","classes","dispatch","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","isSubscribed","Loaddata","then","res","console","log","data","name","catch","err","map","column","fontWeight","slice","row","index","indx","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { DailyUpdate } from \"../../actions/Api\";\nimport { CircleLoading } from \"react-loadingg\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"load\": {\n      return {\n        ...state,\n        isloading: true\n      };\n    }\n    case \"loaded\": {\n      return {\n        ...state,\n        isloading: false,\n        rows: action.item\n      };\n    }\n    default:\n      break;\n  }\n  return state;\n}\n\nconst InitialState = {\n  isloading: false,\n  rows: [],\n  columns: [\n    { id: \"combinedKey\", label: \"Name\", minWidth: 170 },\n    { id: \"countryRegion\", label: \"ISO\\u00a0Code\", minWidth: 100 },\n    {\n      id: \"provinceState\",\n      label: \"Province State\",\n      minWidth: 170,\n      align: \"right\",\n      format: value => value.toLocaleString()\n    },\n    {\n      id: \"confirmed\",\n      label: \"Confirmed Case\",\n      minWidth: 170,\n      align: \"right\",\n      format: value => value.toFixed(2)\n    },\n    {\n      id: \"recovered\",\n      label: \"Recovered Case\",\n      minWidth: 170,\n      align: \"right\",\n      format: value => value.toFixed(2)\n    },\n    {\n      id: \"deaths\",\n      label: \"Deaths Case\",\n      minWidth: 170,\n      align: \"right\",\n      format: value => value.toFixed(2)\n    }\n  ]\n};\n\nexport default function TableData(props) {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const { rows, columns, isloading } = state;\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    let isSubscribed = true;\n    if (isSubscribed) {\n      dispatch({ type: \"load\" });\n      const Loaddata = async () => {\n        await DailyUpdate()\n          .then(res => {\n            console.log(res.data);\n            dispatch({\n              type: \"loaded\",\n              name: \"general_info\",\n              item: res.data\n            });\n          })\n          .catch(err => console.log(err));\n      };\n      Loaddata();\n    }\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {isloading ? (\n        <CircleLoading />\n      ) : (\n        <Paper className={classes.root}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map(column => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth, fontWeight: 600 }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    return (\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                        {columns.map((column, indx) => {\n                          const value = row[column.id];\n                          return (\n                            <TableCell key={indx} align={column.align}>\n                              {value}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100, 200]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      )}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}