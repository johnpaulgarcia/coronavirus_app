{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Desktop/practice/my-app/src/components/manage/common/sample.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [{\n  id: \"countryRegion\",\n  label: \"Name\",\n  minWidth: 170\n}, {\n  id: \"iso3\",\n  label: \"ISO\\u00a0Code\",\n  minWidth: 100\n}, {\n  id: \"provinceState\",\n  label: \"Province State\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toLocaleString()\n}, {\n  id: \"confirmed\",\n  label: \"Confirmed Case\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toLocaleString()\n}, {\n  id: \"recovered\",\n  label: \"Recovered Case\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toFixed(2)\n}, {\n  id: \"deaths\",\n  label: \"Death Case\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(countryRegion, iso3, provinceState, confirmed, recovered, deaths) {\n  return {\n    countryRegion,\n    iso3,\n    provinceState,\n    confirmed,\n    recovered,\n    deaths\n  };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const rows = [createData('India', 'IN', 1324171354, 328726, 1111, 1231231) // createData('China', 'CN', 1403500365, 9596961),\n  // createData('Italy', 'IT', 60483973, 301340),\n  // createData('United States', 'US', 327167434, 9833520),\n  // createData('Canada', 'CA', 37602103, 9984670),\n  // createData('Australia', 'AU', 25475400, 7692024),\n  // createData('Germany', 'DE', 83019200, 357578),\n  // createData('Ireland', 'IE', 4857000, 70273),\n  // createData('Mexico', 'MX', 126577691, 1972550),\n  // createData('Japan', 'JP', 126317000, 377973),\n  // createData('France', 'FR', 67022000, 640679),\n  // createData('United Kingdom', 'GB', 67545757, 242495),\n  // createData('Russia', 'RU', 146793744, 17098246),\n  // createData('Nigeria', 'NG', 200962417, 923768),\n  // createData('Brazil', 'BR', 210147125, 8515767),\n  ];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (isSubscribed) {\n      if (props.data) {\n        console.log(props.data); // props.data.map(element => {\n        //     // console.log(createData(element.countryRegion, element.iso3, element.provinceState, element.confirmed, element.recovered,element.deaths))\n        //   rows.push(createData(element.countryRegion, element.iso3, element.provinceState, element.confirmed, element.recovered,element.deaths));\n        // });\n      }\n    }\n\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, [props]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth,\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, props.data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, rowindx) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: rowindx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, columns.map((column, index) => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: index,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }, value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/webdev/Desktop/practice/my-app/src/components/manage/common/sample.js"],"names":["React","useEffect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","countryRegion","iso3","provinceState","confirmed","recovered","deaths","useStyles","root","width","container","maxHeight","StickyHeadTable","props","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","rows","handleChangePage","event","newPage","handleChangeRowsPerPage","target","isSubscribed","data","console","log","map","column","fontWeight","slice","row","rowindx","index","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst columns = [\n  { id: \"countryRegion\", label: \"Name\", minWidth: 170 },\n  { id: \"iso3\", label: \"ISO\\u00a0Code\", minWidth: 100 },\n  {\n    id: \"provinceState\",\n    label: \"Province State\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"confirmed\",\n    label: \"Confirmed Case\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"recovered\",\n    label: \"Recovered Case\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toFixed(2)\n  },\n  {\n    id: \"deaths\",\n    label: \"Death Case\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toFixed(2)\n  }\n];\n\nfunction createData(\n  countryRegion,\n  iso3,\n  provinceState,\n  confirmed,\n  recovered,\n  deaths\n) {\n  return { countryRegion, iso3, provinceState, confirmed, recovered, deaths };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const rows = [\n    createData('India', 'IN', 1324171354, 328726,1111,1231231),\n    // createData('China', 'CN', 1403500365, 9596961),\n    // createData('Italy', 'IT', 60483973, 301340),\n    // createData('United States', 'US', 327167434, 9833520),\n    // createData('Canada', 'CA', 37602103, 9984670),\n    // createData('Australia', 'AU', 25475400, 7692024),\n    // createData('Germany', 'DE', 83019200, 357578),\n    // createData('Ireland', 'IE', 4857000, 70273),\n    // createData('Mexico', 'MX', 126577691, 1972550),\n    // createData('Japan', 'JP', 126317000, 377973),\n    // createData('France', 'FR', 67022000, 640679),\n    // createData('United Kingdom', 'GB', 67545757, 242495),\n    // createData('Russia', 'RU', 146793744, 17098246),\n    // createData('Nigeria', 'NG', 200962417, 923768),\n    // createData('Brazil', 'BR', 210147125, 8515767),\n  ];\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    let isSubscribed = true;\n    if (isSubscribed) {\n      if (props.data) {\n          console.log(props.data)\n        // props.data.map(element => {\n        //     // console.log(createData(element.countryRegion, element.iso3, element.provinceState, element.confirmed, element.recovered,element.deaths))\n        //   rows.push(createData(element.countryRegion, element.iso3, element.provinceState, element.confirmed, element.recovered,element.deaths));\n        // });\n      }\n    }\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, [props]);\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth, fontWeight: 600 }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.data\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row,rowindx) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={rowindx}>\n                    {columns.map((column,index) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={index} align={column.align}>\n                          {value}\n                          {/* {column.format && typeof value === 'number' ? column.format(value) : value} */}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n              \n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}