{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Desktop/practice/my-app/src/components/manage/common/countries.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { CountryData } from \"../../actions/Api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"98%\",\n    margin: \"1% auto\"\n  },\n  container: {\n    maxHeight: 600\n  },\n  formControl: {\n    marginLeft: \"1%\",\n    minWidth: 250\n  }\n}));\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"loaded\":\n      {\n        return { ...state,\n          isloading: false,\n          rows: action.item,\n          rowsbackup: action.item\n        };\n      }\n\n    case \"search\":\n      {\n        return { ...state,\n          isloading: false,\n          rows: action.item\n        };\n      }\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nconst InitialState = {\n  rows: [],\n  rowsbackup: []\n};\nexport default function CountriesData(props) {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const {\n    rows,\n    rowsbackup\n  } = state;\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (isSubscribed) {\n      const Loaddata = async () => {\n        await CountryData().then(res => {\n          dispatch({\n            type: \"Loaded\",\n            name: \"filter-category\",\n            data: res\n          });\n        });\n      };\n\n      Loaddata();\n    }\n\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, []);\n\n  const onSearch = async e => {\n    e.preventDefault();\n    const result = rows.filter(element => element.combinedKey.toLowerCase().match(e.currentTarget.value.toLowerCase()));\n\n    if (result.length > 0 && e.currentTarget.value.length > 0) {\n      dispatch({\n        type: \"search\",\n        name: \"general_info\",\n        item: result\n      });\n    } else {\n      dispatch({\n        type: \"search\",\n        name: \"general_info\",\n        item: rowsbackup\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      paddingLeft: \"1%\",\n      paddingRight: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"filled-required\",\n    variant: \"filled\",\n    placeholder: \"Search Name...\",\n    fullWidth: true,\n    onChange: e => onSearch(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/webdev/Desktop/practice/my-app/src/components/manage/common/countries.js"],"names":["React","useEffect","useReducer","CountryData","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TextField","FormControl","Select","InputLabel","MenuItem","Typography","useStyles","theme","root","width","margin","container","maxHeight","formControl","marginLeft","minWidth","reducer","state","action","type","isloading","rows","item","rowsbackup","InitialState","CountriesData","props","classes","dispatch","isSubscribed","Loaddata","then","res","name","data","console","log","onSearch","e","preventDefault","result","filter","element","combinedKey","toLowerCase","match","currentTarget","value","length","display","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { CountryData } from \"../../actions/Api\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"98%\",\n    margin: \"1% auto\"\n  },\n  container: {\n    maxHeight: 600\n  },\n  formControl: {\n    marginLeft: \"1%\",\n    minWidth: 250\n  }\n}));\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"loaded\": {\n      return {\n        ...state,\n        isloading: false,\n        rows: action.item,\n        rowsbackup: action.item\n      };\n    }\n    case \"search\": {\n      return {\n        ...state,\n        isloading: false,\n        rows: action.item\n      };\n    }\n    default:\n      break;\n  }\n  return state;\n}\n\nconst InitialState = {\n  rows: [],\n  rowsbackup: [],\n};\n\nexport default function CountriesData(props) {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const { rows, rowsbackup } = state;\n\n\n  useEffect(() => {\n    let isSubscribed = true;\n    if (isSubscribed) {\n      const Loaddata = async () => {\n        await CountryData().then(res => {\n          dispatch({\n            type: \"Loaded\",\n            name: \"filter-category\",\n            data: res\n          });\n        });\n      };\n      Loaddata();\n    }\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, []);\n\n  const onSearch = async e => {\n    e.preventDefault();\n    const result = rows.filter(element =>\n      element.combinedKey\n        .toLowerCase()\n        .match(e.currentTarget.value.toLowerCase())\n    );\n    if (result.length > 0 && e.currentTarget.value.length > 0) {\n      dispatch({\n        type: \"search\",\n        name: \"general_info\",\n        item: result\n      });\n    } else {\n      dispatch({\n        type: \"search\",\n        name: \"general_info\",\n        item: rowsbackup\n      });\n    }\n  };\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <div style={{ display: \"flex\", paddingLeft: \"1%\", paddingRight: \"1%\" }}>\n          <TextField\n            id=\"filled-required\"\n            variant=\"filled\"\n            placeholder=\"Search Name...\"\n            fullWidth\n            onChange={e => onSearch(e)}\n          />\n        </div>\n      </Paper>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}