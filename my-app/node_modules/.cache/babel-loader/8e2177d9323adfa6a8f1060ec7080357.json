{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Desktop/practice/my-app/src/components/manage/common/table.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { General_Info } from \"../../actions/Api\";\nimport { CircleLoading } from \"react-loadingg\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"load\":\n      {\n        return { ...state,\n          isloading: true\n        };\n      }\n\n    case \"loaded\":\n      {\n        return { ...state,\n          isloading: false,\n          data: action.data\n        };\n      }\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nconst InitialState = {\n  isloading: false,\n  data: {}\n};\nexport default function Tablelist() {\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const {\n    data,\n    isloading\n  } = state;\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (isSubscribed) {\n      dispatch({\n        type: \"load\"\n      });\n\n      const Loaddata = async () => {\n        await General_Info().then(res => {\n          console.log(res.data);\n          dispatch({\n            type: \"loaded\",\n            name: \"general_info\",\n            data: res.data\n          });\n        }).catch(err => console.log(err));\n      };\n\n      Loaddata();\n    }\n\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, []);\n  console.log(state);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, isloading ? /*#__PURE__*/React.createElement(CircleLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      backgroundColor: '#cfe8fc',\n      height: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"sdfg\"))));\n}","map":{"version":3,"sources":["/home/webdev/Desktop/practice/my-app/src/components/manage/common/table.js"],"names":["React","useEffect","useReducer","General_Info","CircleLoading","CssBaseline","Container","reducer","state","action","type","isloading","data","InitialState","Tablelist","dispatch","isSubscribed","Loaddata","then","res","console","log","name","catch","err","backgroundColor","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AAAa;AACX,eAAO,EACL,GAAGF,KADE;AAELG,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID;;AACD,SAAK,QAAL;AAAe;AACb,eAAO,EACL,GAAGH,KADE;AAELG,UAAAA,SAAS,EAAE,KAFN;AAGLC,UAAAA,IAAI,EAAEH,MAAM,CAACG;AAHR,SAAP;AAKD;;AACD;AACE;AAfJ;;AAiBA,SAAOJ,KAAP;AACD;;AACD,MAAMK,YAAY,GAAG;AACnBF,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAIA,eAAe,SAASE,SAAT,GAAqB;AAClC,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBb,UAAU,CAACK,OAAD,EAAUM,YAAV,CAApC;AACA,QAAM;AAAED,IAAAA,IAAF;AAAQD,IAAAA;AAAR,MAAsBH,KAA5B;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,YAAY,GAAG,IAAnB;;AACA,QAAIA,YAAJ,EAAkB;AAChBD,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;;AACA,YAAMO,QAAQ,GAAG,YAAY;AAC3B,cAAMd,YAAY,GACfe,IADG,CACEC,GAAG,IAAI;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACP,IAAhB;AACAG,UAAAA,QAAQ,CAAC;AACPL,YAAAA,IAAI,EAAE,QADC;AAEPY,YAAAA,IAAI,EAAE,cAFC;AAGPV,YAAAA,IAAI,EAAEO,GAAG,CAACP;AAHH,WAAD,CAAR;AAKD,SARG,EASHW,KATG,CASGC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CATV,CAAN;AAUD,OAXD;;AAYAP,MAAAA,QAAQ;AACT;;AACD,WAAO,MAAM;AACXG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAL,MAAAA,YAAY,GAAG,KAAf;AACD,KAHD;AAID,GAtBQ,EAsBN,EAtBM,CAAT;AAuBAI,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,SAAS,gBACR,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,KAAK,EAAE;AAACc,MAAAA,eAAe,EAAE,SAAlB;AAA6BC,MAAAA,MAAM,EAAE;AAArC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CAFF,CAJJ,CADF;AAcD","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { General_Info } from \"../../actions/Api\";\nimport { CircleLoading } from \"react-loadingg\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"load\": {\n      return {\n        ...state,\n        isloading: true\n      };\n    }\n    case \"loaded\": {\n      return {\n        ...state,\n        isloading: false,\n        data: action.data\n      };\n    }\n    default:\n      break;\n  }\n  return state;\n}\nconst InitialState = {\n  isloading: false,\n  data: {}\n};\nexport default function Tablelist() {\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const { data, isloading } = state;\n  useEffect(() => {\n    let isSubscribed = true;\n    if (isSubscribed) {\n      dispatch({ type: \"load\" });\n      const Loaddata = async () => {\n        await General_Info()\n          .then(res => {\n            console.log(res.data);\n            dispatch({\n              type: \"loaded\",\n              name: \"general_info\",\n              data: res.data\n            });\n          })\n          .catch(err => console.log(err));\n      };\n      Loaddata();\n    }\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, []);\n  console.log(state);\n  return (\n    <React.Fragment>\n      {isloading ? (\n        <CircleLoading />\n      ) : (\n        <div>\n          <CssBaseline />\n          <Container maxWidth=\"xl\">\n          <h1 style={{backgroundColor: '#cfe8fc', height: '100vh' }}>sdfg</h1>\n          </Container>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}