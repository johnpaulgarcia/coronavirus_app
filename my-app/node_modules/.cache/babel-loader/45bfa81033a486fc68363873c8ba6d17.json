{"ast":null,"code":"import axios from \"axios\";\nexport const General_Info = async () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(axios.get('https://covid19.mathdro.id/api'));\n    }, 1000);\n  });\n};\nexport const Confirmed_Cases = async () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(axios.get('https://covid19.mathdro.id/api/confirmed'));\n    }, 1000);\n  });\n};\nexport const DailyUpdate = async () => {\n  return new Promise(resolve => {\n    let date = new Date();\n    setTimeout(() => {\n      resolve(axios.get(`https://covid19.mathdro.id/api/daily/${date.getMonth() + 1 + \"-\" + (date.getDate() - 1) + \"-\" + date.getFullYear()}`));\n    }, 1000);\n  });\n};\nexport const CountryData = async country => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(axios.get(`https://covid19.mathdro.id/api/countries/${country}`));\n    }, 1000);\n  });\n};\nexport const FilterData = async () => {\n  return new Promise(resolve => {\n    let date = new Date();\n    setTimeout(() => {\n      // let arr = []\n      axios.get(`https://covid19.mathdro.id/api/daily/${date.getMonth() + 1 + \"-\" + (date.getDate() - 1) + \"-\" + date.getFullYear()}`).then(res => {\n        const arr = res.data.map(element => {\n          // arr.push(element.countryRegion)\n          return element.countryRegion;\n        });\n        const newdata = new Set(arr);\n        resolve([...newdata]);\n      });\n    }, 1000);\n  });\n};\nexport const GetData = async () => {\n  return new Promise(resolve => {\n    let date = new Date();\n    let today = date.getMonth() + 1 + \"-\" + (date.getDate() - 1) + \"-\" + date.getFullYear();\n    let url = `https://covid19.mathdro.id/api/daily/${today}`;\n    setTimeout(() => {\n      resolve(axios.get(url));\n    }, 500);\n  });\n};","map":{"version":3,"sources":["/home/webdev/Desktop/practice/my-app/src/components/actions/Api.js"],"names":["axios","General_Info","Promise","resolve","setTimeout","get","Confirmed_Cases","DailyUpdate","date","Date","getMonth","getDate","getFullYear","CountryData","country","FilterData","then","res","arr","data","map","element","countryRegion","newdata","Set","GetData","today","url"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\nexport const General_Info = async () =>{\n    return new Promise ((resolve) => {\n        setTimeout(()=>{\n            resolve(axios.get('https://covid19.mathdro.id/api'))\n        },1000);\n    })\n}\n\nexport const Confirmed_Cases = async () =>{\n    return new Promise ((resolve) => {\n        setTimeout(()=>{\n            resolve(axios.get('https://covid19.mathdro.id/api/confirmed'))\n        },1000);\n    })\n}\n\nexport const DailyUpdate = async () =>{\n    return new Promise ((resolve) => {\n        let date = new Date()\n        setTimeout(()=>{\n            resolve(axios.get(`https://covid19.mathdro.id/api/daily/${(date.getMonth()+1)+\"-\"+(date.getDate()-1)+\"-\"+date.getFullYear()}`))\n        },1000);\n    })\n}\n\nexport const CountryData = async (country) =>{\n    return new Promise ((resolve) => {\n        setTimeout(()=>{\n            resolve(axios.get(`https://covid19.mathdro.id/api/countries/${country}`))\n        },1000);\n    })\n}\n\nexport const FilterData = async () =>{\n    return new Promise ((resolve) => {\n        let date = new Date()\n        \n        setTimeout(()=>{\n            // let arr = []\n            axios.get(`https://covid19.mathdro.id/api/daily/${(date.getMonth()+1)+\"-\"+(date.getDate()-1)+\"-\"+date.getFullYear()}`)\n            .then(res=>{\n                const arr = res.data.map(element=>{\n                    // arr.push(element.countryRegion)\n                    return element.countryRegion\n                })\n                const newdata = new Set(arr);\n                resolve([...newdata])\n            })\n            \n            \n        },1000);\n    })\n}\n\n\nexport const GetData = async () => {\n  \n    return new Promise((resolve)=>{\n  \n    let date = new Date();\n    let today =\n      date.getMonth() + 1 + \"-\" + (date.getDate() - 1) + \"-\" + date.getFullYear();\n    let url = `https://covid19.mathdro.id/api/daily/${today}`;\n    setTimeout(()=>{\n      resolve(axios.get(url))\n    },500)\n    })\n  };\n  "]},"metadata":{},"sourceType":"module"}