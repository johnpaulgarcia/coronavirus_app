{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Desktop/practice/my-app/src/components/manage/common/sample.js\";\nimport React, { useEffect, useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'countryRegion',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'iso3',\n  label: 'ISO\\u00a0Code',\n  minWidth: 100\n}, {\n  id: 'provinceState',\n  label: 'Province State',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString()\n}, {\n  id: 'confirmed',\n  label: 'Confirmed Case',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString()\n}, {\n  id: 'recovered',\n  label: 'Recovered Case',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}, {\n  id: 'deaths',\n  label: 'Death Case',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(countryRegion, iso3, provinceState, confirmed, recovered, deaths) {\n  return {\n    countryRegion,\n    iso3,\n    provinceState,\n    confirmed,\n    recovered,\n    deaths\n  };\n}\n\nconst rows = [createData('India', 'IN', 1324171354, 3287263, 1), createData('China', 'CN', 1403500365, 9596961, 2), createData('Italy', 'IT', 60483973, 301340, 3), createData('United States', 'US', 327167434, 9833520, 4), createData('Canada', 'CA', 37602103, 9984670, 5), createData('Australia', 'AU', 25475400, 7692024, 6), createData('Germany', 'DE', 83019200, 357578, 7), createData('Ireland', 'IE', 4857000, 70273, 8), createData('Mexico', 'MX', 126577691, 1972550, 9), createData('Japan', 'JP', 126317000, 377973, 10), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const rowdata = [...props.data];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (isSubscribed) {\n      console.log(rowdata);\n    }\n\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, [props]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.iso3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }\n      }, value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/webdev/Desktop/practice/my-app/src/components/manage/common/sample.js"],"names":["React","useEffect","useReducer","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","countryRegion","iso3","provinceState","confirmed","recovered","deaths","rows","useStyles","root","width","container","maxHeight","StickyHeadTable","props","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","rowdata","data","handleChangePage","event","newPage","handleChangeRowsPerPage","target","isSubscribed","console","log","map","column","slice","row","length"],"mappings":"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","sourcesContent":["import React,{useEffect,useReducer} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n  { id: 'countryRegion', label: 'Name', minWidth: 170 },\n  { id: 'iso3', label: 'ISO\\u00a0Code', minWidth: 100 },\n  {\n    id: 'provinceState',\n    label: 'Province State',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toLocaleString(),\n  },\n  {\n    id: 'confirmed',\n    label: 'Confirmed Case',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toLocaleString(),\n  },\n  {\n    id: 'recovered',\n    label: 'Recovered Case',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'deaths',\n    label: 'Death Case',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2),\n  },\n];\n\nfunction createData(countryRegion, iso3, provinceState, confirmed,recovered,deaths) {\n  return { countryRegion, iso3, provinceState, confirmed,recovered,deaths };\n}\n\nconst rows = [\n  createData('India', 'IN', 1324171354, 3287263,1),\n  createData('China', 'CN', 1403500365, 9596961,2),\n  createData('Italy', 'IT', 60483973, 301340,3),\n  createData('United States', 'US', 327167434, 9833520,4),\n  createData('Canada', 'CA', 37602103, 9984670,5),\n  createData('Australia', 'AU', 25475400, 7692024,6),\n  createData('Germany', 'DE', 83019200, 357578,7),\n  createData('Ireland', 'IE', 4857000, 70273,8),\n  createData('Mexico', 'MX', 126577691, 1972550,9),\n  createData('Japan', 'JP', 126317000, 377973,10),\n  createData('France', 'FR', 67022000, 640679),\n  createData('United Kingdom', 'GB', 67545757, 242495),\n  createData('Russia', 'RU', 146793744, 17098246),\n  createData('Nigeria', 'NG', 200962417, 923768),\n  createData('Brazil', 'BR', 210147125, 8515767),\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const rowdata = [...props.data]\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\nuseEffect(()=>{\n    let isSubscribed = true;\n    if (isSubscribed) {\n       console.log(rowdata)\n    }\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n},[props])\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.iso3}>\n                  {columns.map(column => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {value}\n                        {/* {column.format && typeof value === 'number' ? column.format(value) : value} */}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}