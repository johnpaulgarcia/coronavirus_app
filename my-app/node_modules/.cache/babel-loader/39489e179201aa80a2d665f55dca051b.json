{"ast":null,"code":"import { Control, DomUtil, DomEvent, icon } from \"leaflet\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n\nimport ReactDOM from \"react-dom\";\nimport { Popup, MapControl, Marker } from \"react-leaflet\";\nimport { SearchControl } from \"./search-control\";\nexport default class ReactLeafletSearch extends MapControl {\n  constructor(props, context) {\n    var _a;\n\n    super(props);\n\n    this.handler = ({\n      event,\n      payload\n    }) => {\n      if (event === \"add\") {\n        payload && this.latLngHandler(payload.latlng, payload.info, payload.raw);\n      } else {\n        this.removeMarkerHandler();\n      }\n    };\n\n    this.div = DomUtil.create(\"div\", \"leaflet-search-wrap\");\n    DomEvent.disableClickPropagation(this.div);\n    DomEvent.disableScrollPropagation(this.div);\n    this.state = {\n      search: false,\n      info: false\n    };\n    this.markerIcon = icon({\n      iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-icon.png\",\n      iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-icon-2x.png\",\n      shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-shadow.png\",\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      tooltipAnchor: [16, -28],\n      shadowSize: [41, 41]\n    });\n    this.SearchInfo = null; // searched lat,lng or response from provider\n\n    this.map = context.map || ((_a = props.leaflet) === null || _a === void 0 ? void 0 : _a.map);\n    this.markerRef = React.createRef();\n  }\n\n  createLeafletElement(props) {\n    const ReactLeafletSearchControl = Control.extend({\n      onAdd: map => this.div,\n      onRemove: map => {}\n    });\n    return new ReactLeafletSearchControl(props);\n  }\n\n  latLngHandler(latLng, info, raw) {\n    this.SearchInfo = {\n      info,\n      latLng,\n      raw\n    };\n    const popUpStructure = React.createElement(\"div\", null, React.createElement(\"p\", null, Array.isArray(info) ? info.toString() : info), React.createElement(\"div\", {\n      className: \"search-control-popup-seperator\"\n    }), React.createElement(\"div\", null, `latitude: ${latLng.lat}`), React.createElement(\"div\", null, `longitude: ${latLng.lng}`));\n    this.goToLatLng(latLng, popUpStructure);\n  }\n\n  removeMarkerHandler() {\n    this.setState({\n      search: false\n    });\n  }\n\n  goToLatLng(latLng, info) {\n    this.setState({\n      search: latLng,\n      info: info\n    }, () => {\n      this.flyTo();\n    });\n  }\n\n  flyTo() {\n    if (this.state.search) {\n      switch (this.props.mapStateModifier) {\n        case \"flyTo\":\n          this.map && this.map.flyTo(this.state.search, this.props.zoom, this.props.zoomPanOptions);\n          break;\n\n        case \"setView\":\n          this.map && this.map.setView(this.state.search, this.props.zoom, this.props.zoomPanOptions);\n          break;\n\n        default:\n          typeof this.props.mapStateModifier === \"function\" && this.props.mapStateModifier(this.state.search);\n      }\n    }\n  }\n\n  componentDidMount() {\n    super.componentDidMount && super.componentDidMount();\n    ReactDOM.render(React.createElement(SearchControl, Object.assign({\n      className: this.props.className,\n      provider: this.props.provider,\n      customProvider: this.props.customProvider,\n      providerOptions: this.props.providerOptions,\n      openSearchOnLoad: this.props.openSearchOnLoad,\n      closeResultsOnClick: this.props.closeResultsOnClick,\n      inputPlaceholder: this.props.inputPlaceholder,\n      search: this.props.search,\n      map: this.map,\n      handler: this.handler,\n      removeMarker: this.handler\n    }, this.props.tabIndex !== undefined ? {\n      tabIndex: this.props.tabIndex\n    } : {})), this.div);\n  }\n\n  componentDidUpdate() {\n    this.markerRef.current && this.markerRef.current.leafletElement.openPopup();\n  }\n\n  defaultPopUp() {\n    return React.createElement(Popup, null, React.createElement(\"span\", null, this.state.info));\n  }\n\n  render() {\n    return this.SearchInfo && this.state.search && this.props.showMarker ? React.createElement(Marker, {\n      ref: this.markerRef,\n      icon: this.props.markerIcon || this.markerIcon,\n      key: `marker-search-${this.state.search.toString()}`,\n      position: this.state.search\n    }, this.props.showPopup && (this.props.popUp ? this.props.popUp(this.SearchInfo) : this.defaultPopUp())) : null;\n  }\n\n} // static propTypes = {\n//     position: PropTypes.string.isRequired,\n//     providerKey: PropTypes.string,\n//     inputPlaceholder: PropTypes.string,\n//     showMarker: PropTypes.bool,\n//     showPopup: PropTypes.bool,\n//     popUp: PropTypes.func,\n//     zoom: PropTypes.number,\n//     search: PropTypes.arrayOf(PropTypes.number),\n//     closeResultsOnClick: PropTypes.bool,\n//     openSearchOnLoad: PropTypes.bool,\n//     searchBounds: PropTypes.array,\n//     provider: PropTypes.string,\n//     providerOptions: PropTypes.object,\n//     zoomPanOptions: PropTypes.object,\n//     mapStateModifier: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n//     customProvider: PropTypes.oneOfType([PropTypes.bool, PropTypes.func, PropTypes.object])\n// };\n\nReactLeafletSearch.defaultProps = {\n  inputPlaceholder: \"Search Lat,Lng\",\n  showMarker: true,\n  showPopup: true,\n  zoom: 10,\n  closeResultsOnClick: false,\n  openSearchOnLoad: false,\n  search: undefined,\n  provider: \"OpenStreetMap\",\n  mapStateModifier: \"flyTo\",\n  zoomPanOptions: {\n    animate: true,\n    duration: 0.25,\n    easeLinearity: 0.25,\n    noMoveStart: false\n  }\n};","map":{"version":3,"sources":["/home/webdev/Desktop/practice/my-app/node_modules/react-leaflet-search/lib/ReactLeafletSearch.js"],"names":["Control","DomUtil","DomEvent","icon","React","ReactDOM","Popup","MapControl","Marker","SearchControl","ReactLeafletSearch","constructor","props","context","_a","handler","event","payload","latLngHandler","latlng","info","raw","removeMarkerHandler","div","create","disableClickPropagation","disableScrollPropagation","state","search","markerIcon","iconUrl","iconRetinaUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","SearchInfo","map","leaflet","markerRef","createRef","createLeafletElement","ReactLeafletSearchControl","extend","onAdd","onRemove","latLng","popUpStructure","createElement","Array","isArray","toString","className","lat","lng","goToLatLng","setState","flyTo","mapStateModifier","zoom","zoomPanOptions","setView","componentDidMount","render","Object","assign","provider","customProvider","providerOptions","openSearchOnLoad","closeResultsOnClick","inputPlaceholder","removeMarker","tabIndex","undefined","componentDidUpdate","current","leafletElement","openPopup","defaultPopUp","showMarker","ref","key","position","showPopup","popUp","defaultProps","animate","duration","easeLinearity","noMoveStart"],"mappings":"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","sourcesContent":["import { Control, DomUtil, DomEvent, icon } from \"leaflet\";\nimport React from \"react\";\n// import PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\nimport { Popup, MapControl, Marker } from \"react-leaflet\";\nimport { SearchControl } from \"./search-control\";\nexport default class ReactLeafletSearch extends MapControl {\n    constructor(props, context) {\n        var _a;\n        super(props);\n        this.handler = ({ event, payload }) => {\n            if (event === \"add\") {\n                payload && this.latLngHandler(payload.latlng, payload.info, payload.raw);\n            }\n            else {\n                this.removeMarkerHandler();\n            }\n        };\n        this.div = DomUtil.create(\"div\", \"leaflet-search-wrap\");\n        DomEvent.disableClickPropagation(this.div);\n        DomEvent.disableScrollPropagation(this.div);\n        this.state = {\n            search: false,\n            info: false\n        };\n        this.markerIcon = icon({\n            iconUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-icon.png\",\n            iconRetinaUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-icon-2x.png\",\n            shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/images/marker-shadow.png\",\n            iconSize: [25, 41],\n            iconAnchor: [12, 41],\n            popupAnchor: [1, -34],\n            tooltipAnchor: [16, -28],\n            shadowSize: [41, 41]\n        });\n        this.SearchInfo = null; // searched lat,lng or response from provider\n        this.map = context.map || ((_a = props.leaflet) === null || _a === void 0 ? void 0 : _a.map);\n        this.markerRef = React.createRef();\n    }\n    createLeafletElement(props) {\n        const ReactLeafletSearchControl = Control.extend({\n            onAdd: (map) => this.div,\n            onRemove: (map) => { }\n        });\n        return new ReactLeafletSearchControl(props);\n    }\n    latLngHandler(latLng, info, raw) {\n        this.SearchInfo = { info, latLng, raw };\n        const popUpStructure = (React.createElement(\"div\", null,\n            React.createElement(\"p\", null, Array.isArray(info) ? info.toString() : info),\n            React.createElement(\"div\", { className: \"search-control-popup-seperator\" }),\n            React.createElement(\"div\", null, `latitude: ${latLng.lat}`),\n            React.createElement(\"div\", null, `longitude: ${latLng.lng}`)));\n        this.goToLatLng(latLng, popUpStructure);\n    }\n    removeMarkerHandler() {\n        this.setState({ search: false });\n    }\n    goToLatLng(latLng, info) {\n        this.setState({ search: latLng, info: info }, () => {\n            this.flyTo();\n        });\n    }\n    flyTo() {\n        if (this.state.search) {\n            switch (this.props.mapStateModifier) {\n                case \"flyTo\":\n                    this.map && this.map.flyTo(this.state.search, this.props.zoom, this.props.zoomPanOptions);\n                    break;\n                case \"setView\":\n                    this.map && this.map.setView(this.state.search, this.props.zoom, this.props.zoomPanOptions);\n                    break;\n                default:\n                    typeof this.props.mapStateModifier === \"function\" && this.props.mapStateModifier(this.state.search);\n            }\n        }\n    }\n    componentDidMount() {\n        super.componentDidMount && super.componentDidMount();\n        ReactDOM.render(React.createElement(SearchControl, Object.assign({ className: this.props.className, provider: this.props.provider, customProvider: this.props.customProvider, providerOptions: this.props.providerOptions, openSearchOnLoad: this.props.openSearchOnLoad, closeResultsOnClick: this.props.closeResultsOnClick, inputPlaceholder: this.props.inputPlaceholder, search: this.props.search, map: this.map, handler: this.handler, removeMarker: this.handler }, (this.props.tabIndex !== undefined ? { tabIndex: this.props.tabIndex } : {}))), this.div);\n    }\n    componentDidUpdate() {\n        this.markerRef.current && this.markerRef.current.leafletElement.openPopup();\n    }\n    defaultPopUp() {\n        return (React.createElement(Popup, null,\n            React.createElement(\"span\", null, this.state.info)));\n    }\n    render() {\n        return this.SearchInfo && this.state.search && this.props.showMarker ? (React.createElement(Marker, { ref: this.markerRef, icon: this.props.markerIcon || this.markerIcon, key: `marker-search-${this.state.search.toString()}`, position: this.state.search }, this.props.showPopup && (this.props.popUp ? this.props.popUp(this.SearchInfo) : this.defaultPopUp()))) : null;\n    }\n}\n// static propTypes = {\n//     position: PropTypes.string.isRequired,\n//     providerKey: PropTypes.string,\n//     inputPlaceholder: PropTypes.string,\n//     showMarker: PropTypes.bool,\n//     showPopup: PropTypes.bool,\n//     popUp: PropTypes.func,\n//     zoom: PropTypes.number,\n//     search: PropTypes.arrayOf(PropTypes.number),\n//     closeResultsOnClick: PropTypes.bool,\n//     openSearchOnLoad: PropTypes.bool,\n//     searchBounds: PropTypes.array,\n//     provider: PropTypes.string,\n//     providerOptions: PropTypes.object,\n//     zoomPanOptions: PropTypes.object,\n//     mapStateModifier: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n//     customProvider: PropTypes.oneOfType([PropTypes.bool, PropTypes.func, PropTypes.object])\n// };\nReactLeafletSearch.defaultProps = {\n    inputPlaceholder: \"Search Lat,Lng\",\n    showMarker: true,\n    showPopup: true,\n    zoom: 10,\n    closeResultsOnClick: false,\n    openSearchOnLoad: false,\n    search: undefined,\n    provider: \"OpenStreetMap\",\n    mapStateModifier: \"flyTo\",\n    zoomPanOptions: {\n        animate: true,\n        duration: 0.25,\n        easeLinearity: 0.25,\n        noMoveStart: false\n    }\n};\n"]},"metadata":{},"sourceType":"module"}