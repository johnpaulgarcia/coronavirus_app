{"ast":null,"code":"import axios from \"axios\";\nexport const General_Info = async () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(axios.get('https://covid19.mathdro.id/api'));\n    }, 1000);\n  });\n};\nexport const Confirmed_Cases = async () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(axios.get('https://covid19.mathdro.id/api/confirmed'));\n    }, 1000);\n  });\n};\nexport const DailyUpdate = async () => {\n  return new Promise(resolve => {\n    let date = new Date();\n    setTimeout(() => {\n      resolve(axios.get(`https://covid19.mathdro.id/api/daily/${date.getMonth() + 1 + \"-\" + (date.getDate() - 1) + \"-\" + date.getFullYear()}`));\n    }, 1000);\n  });\n};\nexport const CountryData = async country => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (country) {\n        resolve(axios.get(`https://covid19.mathdro.id/api/countries/${country}`));\n      } else {\n        reject('Empty');\n      }\n    }, 1000);\n  });\n};\nexport const FilterData = async () => {\n  return new Promise(resolve => {\n    let date = new Date();\n    setTimeout(() => {\n      let arr = [];\n      axios.get(`https://covid19.mathdro.id/api/daily/${date.getMonth() + 1 + \"-\" + (date.getDate() - 1) + \"-\" + date.getFullYear()}`).then(res => {\n        res.data.map(element => {\n          arr.push(element.countryRegion);\n        }); // const newdata = arr.filter((item,index)=>arr.indexOf(item) === index)\n\n        const newdata = new Set(arr);\n        resolve([...newdata]);\n      });\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["/home/webdev/Desktop/practice/my-app/src/components/actions/Api.js"],"names":["axios","General_Info","Promise","resolve","setTimeout","get","Confirmed_Cases","DailyUpdate","date","Date","getMonth","getDate","getFullYear","CountryData","country","reject","FilterData","arr","then","res","data","map","element","push","countryRegion","newdata","Set"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,YAAW;AACnC,SAAO,IAAIC,OAAJ,CAAcC,OAAD,IAAa;AAC7BC,IAAAA,UAAU,CAAC,MAAI;AACXD,MAAAA,OAAO,CAACH,KAAK,CAACK,GAAN,CAAU,gCAAV,CAAD,CAAP;AACH,KAFS,EAER,IAFQ,CAAV;AAGH,GAJM,CAAP;AAKH,CANM;AAQP,OAAO,MAAMC,eAAe,GAAG,YAAW;AACtC,SAAO,IAAIJ,OAAJ,CAAcC,OAAD,IAAa;AAC7BC,IAAAA,UAAU,CAAC,MAAI;AACXD,MAAAA,OAAO,CAACH,KAAK,CAACK,GAAN,CAAU,0CAAV,CAAD,CAAP;AACH,KAFS,EAER,IAFQ,CAAV;AAGH,GAJM,CAAP;AAKH,CANM;AAQP,OAAO,MAAME,WAAW,GAAG,YAAW;AAClC,SAAO,IAAIL,OAAJ,CAAcC,OAAD,IAAa;AAC7B,QAAIK,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAL,IAAAA,UAAU,CAAC,MAAI;AACXD,MAAAA,OAAO,CAACH,KAAK,CAACK,GAAN,CAAW,wCAAwCG,IAAI,CAACE,QAAL,KAAgB,CAAjB,GAAoB,GAApB,IAAyBF,IAAI,CAACG,OAAL,KAAe,CAAxC,IAA2C,GAA3C,GAA+CH,IAAI,CAACI,WAAL,EAAmB,EAApH,CAAD,CAAP;AACH,KAFS,EAER,IAFQ,CAAV;AAGH,GALM,CAAP;AAMH,CAPM;AASP,OAAO,MAAMC,WAAW,GAAG,MAAOC,OAAP,IAAkB;AACzC,SAAO,IAAIZ,OAAJ,CAAa,CAACC,OAAD,EAASY,MAAT,KAAoB;AACpCX,IAAAA,UAAU,CAAC,MAAI;AACX,UAAGU,OAAH,EAAW;AACXX,QAAAA,OAAO,CAACH,KAAK,CAACK,GAAN,CAAW,4CAA2CS,OAAQ,EAA9D,CAAD,CAAP;AACC,OAFD,MAGI;AACAC,QAAAA,MAAM,CAAC,OAAD,CAAN;AACH;AACJ,KAPS,EAOR,IAPQ,CAAV;AAQH,GATM,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAG,YAAW;AACjC,SAAO,IAAId,OAAJ,CAAcC,OAAD,IAAa;AAC7B,QAAIK,IAAI,GAAG,IAAIC,IAAJ,EAAX;AAEAL,IAAAA,UAAU,CAAC,MAAI;AACX,UAAIa,GAAG,GAAG,EAAV;AACAjB,MAAAA,KAAK,CAACK,GAAN,CAAW,wCAAwCG,IAAI,CAACE,QAAL,KAAgB,CAAjB,GAAoB,GAApB,IAAyBF,IAAI,CAACG,OAAL,KAAe,CAAxC,IAA2C,GAA3C,GAA+CH,IAAI,CAACI,WAAL,EAAmB,EAApH,EACCM,IADD,CACMC,GAAG,IAAE;AACPA,QAAAA,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAaC,OAAO,IAAE;AAClBL,UAAAA,GAAG,CAACM,IAAJ,CAASD,OAAO,CAACE,aAAjB;AACH,SAFD,EADO,CAIP;;AACA,cAAMC,OAAO,GAAG,IAAIC,GAAJ,CAAQT,GAAR,CAAhB;AACAd,QAAAA,OAAO,CAAC,CAAC,GAAGsB,OAAJ,CAAD,CAAP;AACH,OARD;AAWH,KAbS,EAaR,IAbQ,CAAV;AAcH,GAjBM,CAAP;AAkBH,CAnBM","sourcesContent":["import axios from \"axios\"\n\nexport const General_Info = async () =>{\n    return new Promise ((resolve) => {\n        setTimeout(()=>{\n            resolve(axios.get('https://covid19.mathdro.id/api'))\n        },1000);\n    })\n}\n\nexport const Confirmed_Cases = async () =>{\n    return new Promise ((resolve) => {\n        setTimeout(()=>{\n            resolve(axios.get('https://covid19.mathdro.id/api/confirmed'))\n        },1000);\n    })\n}\n\nexport const DailyUpdate = async () =>{\n    return new Promise ((resolve) => {\n        let date = new Date()\n        setTimeout(()=>{\n            resolve(axios.get(`https://covid19.mathdro.id/api/daily/${(date.getMonth()+1)+\"-\"+(date.getDate()-1)+\"-\"+date.getFullYear()}`))\n        },1000);\n    })\n}\n\nexport const CountryData = async (country) =>{\n    return new Promise ((resolve,reject) => {\n        setTimeout(()=>{\n            if(country){\n            resolve(axios.get(`https://covid19.mathdro.id/api/countries/${country}`))\n            }\n            else{\n                reject('Empty')\n            }\n        },1000);\n    })\n}\n\nexport const FilterData = async () =>{\n    return new Promise ((resolve) => {\n        let date = new Date()\n        \n        setTimeout(()=>{\n            let arr = []\n            axios.get(`https://covid19.mathdro.id/api/daily/${(date.getMonth()+1)+\"-\"+(date.getDate()-1)+\"-\"+date.getFullYear()}`)\n            .then(res=>{\n                res.data.map(element=>{\n                    arr.push(element.countryRegion)\n                })\n                // const newdata = arr.filter((item,index)=>arr.indexOf(item) === index)\n                const newdata = new Set(arr);\n                resolve([...newdata])\n            })\n            \n            \n        },1000);\n    })\n}"]},"metadata":{},"sourceType":"module"}