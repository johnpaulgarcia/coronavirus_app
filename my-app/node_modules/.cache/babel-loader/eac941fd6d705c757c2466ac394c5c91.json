{"ast":null,"code":"var _jsxFileName = \"/home/webdev/Desktop/practice/my-app/src/components/manage/common/confirmedcase.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { Confirmed_Cases } from \"../../actions/Api\";\nimport { CircleLoading } from \"react-loadingg\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: \"5%\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"load\":\n      {\n        return { ...state,\n          isloading: true\n        };\n      }\n\n    case \"loaded\":\n      {\n        return { ...state,\n          isloading: false\n        };\n      }\n\n    default:\n      break;\n  }\n\n  return state;\n}\n\nconst InitialState = {\n  isloading: false\n};\nexport default function ConfirmedCase() {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const {\n    isloading\n  } = state;\n  useEffect(() => {\n    let isSubscribed = true;\n\n    if (isSubscribed) {\n      dispatch({\n        type: \"load\"\n      });\n\n      const Loaddata = async () => {\n        await Confirmed_Cases().then(res => {\n          console.log(res.data); // dispatch({\n          //   type: \"loaded\",\n          //   name: \"general_info\",\n          //   data: res.data,\n          //   confirmed: res.data.confirmed,\n          //   recovered: res.data.recovered,\n          //   deaths: res.data.deaths\n          // });\n        }).catch(err => console.log(err));\n      };\n\n      Loaddata();\n    }\n\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, isloading ? /*#__PURE__*/React.createElement(CircleLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 40\n    }\n  }));\n}","map":{"version":3,"sources":["/home/webdev/Desktop/practice/my-app/src/components/manage/common/confirmedcase.js"],"names":["React","useEffect","useReducer","Confirmed_Cases","CircleLoading","CssBaseline","Container","makeStyles","useStyles","theme","root","flexGrow","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","reducer","state","action","type","isloading","InitialState","ConfirmedCase","classes","dispatch","isSubscribed","Loaddata","then","res","console","log","data","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,SAAS,EAAE;AAFP,GAD+B;AAKrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAER,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAL8B,CAAL,CAAN,CAA5B;;AAYA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AAAa;AACX,eAAO,EACL,GAAGF,KADE;AAELG,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID;;AACD,SAAK,QAAL;AAAe;AACb,eAAO,EACL,GAAGH,KADE;AAELG,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID;;AACD;AACE;AAdJ;;AAgBA,SAAOH,KAAP;AACD;;AACD,MAAMI,YAAY,GAAG;AACnBD,EAAAA,SAAS,EAAE;AADQ,CAArB;AAGA,eAAe,SAASE,aAAT,GAAyB;AACtC,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAM,CAACc,KAAD,EAAQO,QAAR,IAAoB3B,UAAU,CAACmB,OAAD,EAAUK,YAAV,CAApC;AACA,QAAM;AAAED,IAAAA;AAAF,MAAgBH,KAAtB;AACArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,YAAY,GAAG,IAAnB;;AACA,QAAIA,YAAJ,EAAkB;AAChBD,MAAAA,QAAQ,CAAC;AAAEL,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;;AACA,YAAMO,QAAQ,GAAG,YAAY;AAC3B,cAAM5B,eAAe,GAClB6B,IADG,CACEC,GAAG,IAAI;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EADW,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,SAXG,EAYHC,KAZG,CAYGC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAZV,CAAN;AAaD,OAdD;;AAeAP,MAAAA,QAAQ;AACT;;AACD,WAAO,MAAM;AACXG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAL,MAAAA,YAAY,GAAG,KAAf;AACD,KAHD;AAID,GAzBQ,EAyBN,EAzBM,CAAT;AA0BA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,SAAS,gBAAG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnC,CADF;AAKD","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { Confirmed_Cases } from \"../../actions/Api\";\nimport { CircleLoading } from \"react-loadingg\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: \"5%\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"load\": {\n      return {\n        ...state,\n        isloading: true\n      };\n    }\n    case \"loaded\": {\n      return {\n        ...state,\n        isloading: false\n      };\n    }\n    default:\n      break;\n  }\n  return state;\n}\nconst InitialState = {\n  isloading: false\n};\nexport default function ConfirmedCase() {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const { isloading } = state;\n  useEffect(() => {\n    let isSubscribed = true;\n    if (isSubscribed) {\n      dispatch({ type: \"load\" });\n      const Loaddata = async () => {\n        await Confirmed_Cases()\n          .then(res => {\n            console.log(res.data);\n            // dispatch({\n            //   type: \"loaded\",\n            //   name: \"general_info\",\n            //   data: res.data,\n            //   confirmed: res.data.confirmed,\n            //   recovered: res.data.recovered,\n            //   deaths: res.data.deaths\n            // });\n          })\n          .catch(err => console.log(err));\n      };\n      Loaddata();\n    }\n    return () => {\n      console.log(\"unmounted\");\n      isSubscribed = false;\n    };\n  }, []);\n  return (\n    <React.Fragment>\n      {isloading ? <CircleLoading /> : <div></div>}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}